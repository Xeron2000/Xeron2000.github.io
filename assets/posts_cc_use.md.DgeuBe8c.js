import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.C4qplGO_.js";const d=JSON.parse('{"title":"Claude Code 资源推荐","description":"分享我从 roo code 转向 claude code 的原因，以及我整理的一些实用的 claude code 资源和 MCP 配置，帮助新手快速上手","frontmatter":{"date":"2025-09-06T00:00:00.000Z","title":"Claude Code 资源推荐","category":"Code","tags":["claude code","mcp","ai"],"description":"分享我从 roo code 转向 claude code 的原因，以及我整理的一些实用的 claude code 资源和 MCP 配置，帮助新手快速上手"},"headers":[],"relativePath":"posts/cc_use.md","filePath":"posts/cc_use.md"}'),e={name:"posts/cc_use.md"};function l(p,s,h,o,k,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="为什么选择-claude-code" tabindex="-1">为什么选择 Claude Code？ <a class="header-anchor" href="#为什么选择-claude-code" aria-label="Permalink to &quot;为什么选择 Claude Code？&quot;">​</a></h2><p><code>claude code</code> 出了好久了，刚开始我虽然喜欢使用终端，但是对 <code>claude code</code> 无感（主要是因为贵），一直使用 <code>roo code</code> <code>cline</code> 这种 vscode 扩展。后来 <code>cc</code>（代指 <code>claude code</code> 下文皆是）被逆向，可以自定义模型之后我才开始尝试，发现 <code>cc</code> 居然很好用</p><p>最吸引我的还是指令系统，作为一个命令行重度用户，没有什么比不用鼠标到处点击更爽了。其次是 <code>cc</code> 只需要一个终端就能跑，比 <code>cursor</code> <code>cline</code> 这种自由度高。<code>cc</code> 的提示词调教比较好，使用相同的模型，<code>cc</code> 相比较其他编程 agent 来说效果更好。这几点也让我彻底转向 <code>cc</code></p><h2 id="资源分享" tabindex="-1">资源分享 <a class="header-anchor" href="#资源分享" aria-label="Permalink to &quot;资源分享&quot;">​</a></h2><p>我整理了一下我使用 <code>cc</code> 的一些实用资源：</p><ul><li><p><strong><a href="https://linux.do/t/topic/931722" target="_blank" rel="noreferrer">CLAUDE.md</a></strong>：这个帖子是佬友整理的 <code>CLAUDE.md</code> ，效果很好，结合很多编程实用的 mcp 和 子代理 agent ，规范 <code>cc</code> 的输出</p></li><li><p><strong><a href="https://github.com/musistudio/claude-code-router.git" target="_blank" rel="noreferrer">claude-code-router</a></strong>：自定义 <code>cc</code> 模型，无需多言因为这个才用 <code>cc</code></p></li><li><p><strong><a href="https://github.com/bmad-code-org/BMAD-METHOD.git" target="_blank" rel="noreferrer">BMAD-METHOD</a></strong>：bmad-methon 是敏捷人工智能开发规范。我最常用的是里面一个 <code>analyst</code> 的 agent，我喜欢用它做头脑风暴。其他的 agent 我不是很常用，它的 <code>sm -&gt; dev -&gt; qa</code> 迭代我倒是挺喜欢，但是 agent 太多，上手有点难度</p></li><li><p><strong><a href="https://github.com/Pimzino/spec-workflow-mcp.git" target="_blank" rel="noreferrer">spec-workflow-mcp</a></strong>：规范开发的 mcp，fork 的 <code>kiro</code> 的特色功能。先创建 <code>requirements</code> 需求文档，然后创建 <code>design</code> 设计文档，最后遵循这两个文档创建 <code>tasks</code>，把复杂的任务拆分成小步骤实现</p></li><li><p><strong><a href="https://github.com/oraios/serena.git" target="_blank" rel="noreferrer">serena</a></strong>：<code>serena</code> 可以语义检索，精准编辑代码，还可以减少 token 用量，效率更高。这个 mcp 一定要用</p></li><li><p><strong><a href="https://github.com/UfoMiao/zcf.git" target="_blank" rel="noreferrer">zcf</a></strong>：<code>zcf</code> 也是 linuxdo 里的佬友开发的，旨在为 <code>cc</code> 新手提供开箱即用的体验，推荐入门使用</p></li></ul><h2 id="mcp-配置参考" tabindex="-1">MCP 配置参考 <a class="header-anchor" href="#mcp-配置参考" aria-label="Permalink to &quot;MCP 配置参考&quot;">​</a></h2><p>下面我贴一下我常用的 mcp 可以参考, 有的需要具体目录配置我就不贴出来了</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mcpServers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;sequential-thinking&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;-y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;@modelcontextprotocol/server-sequential-thinking&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;context7&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stdio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;-y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;@upstash/context7-mcp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;memory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;-y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;@modelcontextprotocol/server-memory&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;duckduckgo-search&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stdio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uvx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;duckduckgo-mcp-server&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;fetch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;mcp-server-fetch&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uvx&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;spec-workflow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@pimzino/spec-workflow-mcp@latest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--AutoStartDashboard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="https://linux.do/t/topic/931722" target="_blank" rel="noreferrer">https://linux.do/t/topic/931722</a></li><li><a href="https://github.com/musistudio/claude-code-router.git" target="_blank" rel="noreferrer">https://github.com/musistudio/claude-code-router.git</a></li><li><a href="https://github.com/wshobson/agents.git" target="_blank" rel="noreferrer">https://github.com/wshobson/agents.git</a></li><li><a href="https://github.com/bmad-code-org/BMAD-METHOD.git" target="_blank" rel="noreferrer">https://github.com/bmad-code-org/BMAD-METHOD.git</a></li><li><a href="https://github.com/Pimzino/spec-workflow-mcp.git" target="_blank" rel="noreferrer">https://github.com/Pimzino/spec-workflow-mcp.git</a></li><li><a href="https://github.com/oraios/serena.git" target="_blank" rel="noreferrer">https://github.com/oraios/serena.git</a></li><li><a href="https://github.com/UfoMiao/zcf.git" target="_blank" rel="noreferrer">https://github.com/UfoMiao/zcf.git</a></li></ul>`,11)]))}const E=i(e,[["render",l]]);export{d as __pageData,E as default};
